# ===================================================================
# Spring Boot configuration.
#
# This configuration will be overridden by the Spring profile you use,
# for example application-dev.yml if you use the "dev" profile.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

---
# Conditionally disable springdoc on missing api-docs profile
spring:
  config:
    activate:
      on-profile: '!api-docs'
springdoc:
  api-docs:
    enabled: false
---
eureka:
  client:
    enabled: true
    healthcheck:
      enabled: true
    fetch-registry: true
    register-with-eureka: true
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
  instance:
    appname: gateway
    instanceId: gateway:${spring.application.instance-id:${random.value}}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    status-page-url-path: ${management.endpoints.web.base-path}/info
    health-check-url-path: ${management.endpoints.web.base-path}/health
    metadata-map:
      zone: primary # This is needed for the load balancer
      profile: ${spring.profiles.active}
      version: #project.version#
      git-version: ${git.commit.id.describe:}
      git-commit: ${git.commit.id.abbrev:}
      git-branch: ${git.branch:}
      context-path: ${server.servlet.context-path:}
reactive:
  feign:
    circuit:
      breaker:
        enabled: true
  # client:
  #   config:
  #     default:
  #       connectTimeout: 5000
  #       readTimeout: 5000
management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include:
          [
            'configprops',
            'env',
            'gateway',
            'health',
            'info',
            'jhimetrics',
            'jhiopenapigroups',
            'logfile',
            'loggers',
            'prometheus',
            'threaddump',
            'liquibase',
          ]
  endpoint:
    health:
      show-details: when_authorized
      roles: 'ROLE_ADMIN'
      probes:
        enabled: true
      group:
        liveness:
          include: livenessState
        readiness:
          include: readinessState,db
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
  health:
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: ${spring.application.name}
    web:
      server:
        request:
          autotime:
            enabled: true

spring:
  application:
    name: gateway
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          predicates:
            - name: Path
              args:
                pattern: "'/services/'+serviceId.toLowerCase()+'/**'"
          filters:
            - name: RewritePath
              args:
                regexp: "'/services/' + serviceId.toLowerCase() + '/(?<remaining>.*)'"
                replacement: "'/${remaining}'"
      httpclient:
        pool:
          max-connections: 1000
      routes:
        - id: documents
          uri: lb://documents
          predicates:
            - Path=/api/users
            - Path=/api/authorities
            - Path=/api/admin/users
            - Path=/api/admin/users/login
            - Path=/api/test
        - id: claims
          uri: lb://claims
          predicates:
            - Path=/api/claimSubmission/
            - Path=/api/SecondaryclaimSubmission/
            - Path=/api/TertiaryclaimSubmission/
        - id: salesorder
          uri: lb://salesorder
          predicates:
            - Path=/api/sales-order-masters
            - Path=/api/getSOByCreatedById
            - Path=/api/getSOByStatus
            - Path=/api/getSOByBranchAndCreatedDate
            - Path=/api/getSOByFacilityName
            - Path=/api/getSOBySONumber
            - Path=/api/getSOByBranchName
            - Path=/api/getSOByPatientName
            - Path=/api/getSOByPatientId
            - Path=/api/getSOByConfirmationId
            - Path=/api/getSOByConfirmationDetails
            - Path=/api/getSOByCreationDetails
            - Path=/api/getSOBySOInfo
            - Path=/api/getSOByCombinedInformation
            - Path=/api/getInsuranceByInsuranceName
            - Path=/api/getSOByInsuranceId
            - Path=/api/getSOAuditLog
            - Path=/api/getSOItemAuditLog
            - Path=/api/getSOInsuranceAuditLog
            - Path=/api/getSOOverallAuditLog
            - Path=/api/getSOUserActivityReportForAuditLog
            - Path=/api/getSOFinancialAuditLog
            - Path=/api/getSOClinicalAuditLog
            - Path=/api/getSODocumentsAuditLog
            - Path=/api/getSalesOrderDetailsBySearchParameters
            - Path=/api/getSalesOrderDetailsByCombinedParameters
            - Path=/api/saveSOInsuranceDetails
            - Path=/api/saveSOMasterDetails
        - id: items
          uri: lb://items
          predicates:
            - Path=/api/bulkUploadForVendor
            - Path=/api/saveVendor
            - Path=/api/bulkUploadForManufacturer
            - Path=/api/saveManufacturer
            - Path=/api/getManufacturerById
            - Path=/api/getManufacturerByManufacturerName
            - Path=/api/getManufacturerByManufacturerNo
            - Path=/api/getVendorById
            - Path=/api/getVendorByVendorName
            - Path=/api/getVendorByVendorNo
            - Path=/api/getVendorByVendorDescription
            - Path=/api/getBranchOfficeByStatus
            - Path=/api/getBranchGroupByStatus
            - Path=/api/getVendorByStatus
            - Path=/api/getManufactureByStatus
            - Path=/api/bulkUploadForItemMaster
            - Path=/api/saveItemMaster
            - Path=/api/getItemMasterById
            - Path=/api/getItemByItemName
            - Path=/api/getItemByItemNo
            - Path=/api/getItemByItemDescription
            - Path=/api/getAllItemMasterData
            - Path=/api/getItemByStatus
            - Path=/api/getItemProcedureCodeMapByItemId
            - Path=/api/getItemProcedureCodeMapByItemName
            - Path=/api/getItemProcedureCodeMapByItemNo
            - Path=/api/getItemProcedureCodeMapByItemDescription
            - Path=/api/getAllItemProcedureCodeMapData
            - Path=/api/getItemProcedureCodeMapByStatus
            - Path=/api/saveItemVendorMap
            - Path=/api/deactiveItemVendorMap
            - Path=/api/getItemVendorMapByItemId
            - Path=/api/getItemVendorMapByVendorId
            - Path=/api/getItemVendorMapByItemName
            - Path=/api/getItemVendorMapByVendorName
            - Path=/api/getItemVendorMapByStatus
            - Path=/api/saveItemItemlocationMap
            - Path=/api/deactiveItemItemLocationMap
            - Path=/api/getItemItemlocationMapByItemId
            - Path=/api/getItemItemlocationMapByItemLocationId
            - Path=/api/getItemItemlocationMapByItemLocationName
            - Path=/api/getItemItemlocationMapByItemName
            - Path=/api/getItemItemlocationMapByStatus
            - Path=/api/getItemByItemNoOrItemNameAndLocationIdAndPricetableId
            - Path=/api/getItemByItemNoOrItemNameAndPricetableId
            - Path=/api/saveItemGroup
            - Path=/api/getItemGroupById
            - Path=/api/getItemGroupByName
            - Path=/api/getAllItemGroup
            - Path=/api/saveProcedureCode
            - Path=/api/saveProcedureCodeByExternalAPI
            - Path=/api/getProcedureCodeByCode
            - Path=/api/getProcedureCodeByName
            - Path=/api/getProcedureCodeById
            - Path=/api/getItemProcedureCodeMapByProcedureCode
            - Path=/api/getAllProcedureCode
            - Path=/api/getItemGroupAuditLog
            - Path=/api/getItemInventoryStatusAuditLog
            - Path=/api/getItemMasterAuditLog
            - Path=/api/getItemProcedureCodeMapAuditLog
            - Path=/api/getItemSerialNumberAuditLog
            - Path=/api/getItemTypeAuditLog
            - Path=/api/getItemVendorMappingAuditLog
            - Path=/api/getManufacturerAuditLog
            - Path=/api/getPriceDetailsAuditLog
            - Path=/api/getPriceMasterAuditLog
            - Path=/api/getPurchaseOrderAuditLog
            - Path=/api/getPurchaseOrderItemsAuditLog
            - Path=/api/getPurchaseOrderItemsReceivedAuditLog
            - Path=/api/getStockAdjustmentAuditLog
            - Path=/api/getStockTransferAuditLog
            - Path=/api/getVendorWiseItemsForPO
            - Path=/api/savePurchaseOrder
            - Path=/api/cancelFullPurchaseOrder
            - Path=/api/cancelPartialPurchaseOrder
            - Path=/api/receivePurchaseOrder
            - Path=/api/getPurchaseOrderData
        - id: patient
          uri: lb://patient
          predicates:
            - Path=/api/getPatientByBasicInformation
            - Path=/api/savePatient
            - Path=/api/savePatientInsurance
            - Path=/api/getPatientInsuranceBySearchParameters
            - Path=/api/getPatientClinicalBySearchParameters
            - Path=/api/savePatientDocumentDetails
            - Path=/api/uploadPatientDocument
            - Path=/api/downloadPatientDocument
            - Path=/api/getPatientDocumentDetailsBySearchParameters
            - Path=/api/savePatientInsuranceVerification
            - Path=/api/getPatientInsuranceVerificationBySearchParameters
            - Path=/api/savePatientDiagnosis
            - Path=/api/getPatientDiagnosisBySearchParameters
            - Path=/api/saveWorkerCompensation
            - Path=/api/getWorkerCompensationBySearchParameters
            - Path=/api/saveFunctionalAbility
            - Path=/api/getFunctionalAbilityBySearchParameters
            - Path=/api/savePatientDoctorMapping
            - Path=/api/getPatientDoctorMappingBySearchParameters
            - Path=/api/checkPatientIsAlreadyExistOrNot
            - Path=/api/updatePatientInsuranceStatus
            - Path=/api/getAccessTokenRest
            - Path=/api/getPatientAuditLog
            - Path=/api/getPatientInsuranceAuditLog
            - Path=/api/getPatientInsVerifStatAuditLog
            - Path=/api/getPatientDocumentAuditLog
            - Path=/api/getPatientDoctorMapAuditLog
            - Path=/api/getPatientDiagnosisMapAuditLog
            - Path=/api/getPatientClinicalInformationAuditLog
            - Path=/api/getFunctionalAbilityAuditLog
            - Path=/api/getWorkersCompensationAuditLog
            - Path=/api/getDoctorDetails
            - Path=/api/getPatientUserActivityReport
            - Path=/api/generatePatientIDNumber
            - Path=/api/getPatientBucketData
            - Path=/api/generatePatientBucket
        - id: settings
          uri: lb://settings
          predicates:
            - Path=/api/bulkUploadForBranchOffice
            - Path=/api/saveBranchOffice
            - Path=/api/getBranchOfficeById
            - Path=/api/getBranchOfficeByBranchName
            - Path=/api/getBranchOfficeByBranchNo
            - Path=/api/getBranchOfficeByNpi
            - Path=/api/getAllBranchOfficeData
            - Path=/api/bulkUploadForBranchGroup
            - Path=/api/getBranchGroupById
            - Path=/api/getBranchGroupByBranchGroupName
            - Path=/api/getBranchGroupByCompanyId
            - Path=/api/getAllBranchGroupData
            - Path=/api/bulkUploadForItemLocation
            - Path=/api/saveItemLocation
            - Path=/api/getItemLocationById
            - Path=/api/getItemLocationByItemLocationName
            - Path=/api/getItemLocationByDescription
            - Path=/api/getAllItemLocationData
            - Path=/api/getItemLocationByStatus
            - Path=/api/bulkUploadForInsuranceMaster
            - Path=/api/getInsuranceMasterByStatus
            - Path=/api/getAllInsuranceMasterData
            - Path=/api/getInsuranceMasterByInsuranceIdNo
            - Path=/api/getInsuranceMasterByInsuranceName
            - Path=/api/getInsuranceMasterById
            - Path=/api/saveInsuranceMaster
            - Path=/api/bulkUploadForBranchInsurance
            - Path=/api/saveBranchInsuranceMap
            - Path=/api/deactiveBranchInsurancemapByInsuranceIdAndBranchId
            - Path=/api/getInsuranceMasterAuditLog
            - Path=/api/getBranchGroupAuditLog
            - Path=/api/getBranchInsuranceMapAuditLog
            - Path=/api/getBranchItemLocationMapAuditLog
            - Path=/api/getBranchOfficeAuditLog
            - Path=/api/getItemLocationAuditLog
            - Path=/api/getOverallBranchAuditLog
            - Path=/api/getTaxZoneWiseRateByParam
            - Path=/api/getBranchInsuranceMapByBranchIdAndInsuranceId
            - Path=/api/getInsuranceMasterByInsuranceIdList

  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the JAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: #spring.profiles.active#
    #    active: dev
    group:
      dev:
        - dev
        - api-docs
        # Uncomment to activate TLS for the dev profile
        #- tls
  jmx:
    enabled: false
  messages:
    basename: i18n/messages
  main:
    allow-bean-definition-overriding: true
    allow-circular-references: true
  task:
    execution:
      thread-name-prefix: gateway-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: gateway-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true
  security:
    oauth2:
      client:
        provider:
          oidc:
            issuer-uri: http://localhost:9080/auth/realms/jhipster
        registration:
          oidc:
            client-id: web_app
            client-secret: web_app
            scope: openid,profile,email

server:
  servlet:
    session:
      cookie:
        http-only: true

springdoc:
  show-actuator: true

# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  clientApp:
    name: 'gatewayApp'
  # By default CORS is disabled. Uncomment to enable.
  # cors:
  #   allowed-origins: "http://localhost:8100,http://localhost:9000"
  #   allowed-methods: "*"
  #   allowed-headers: "*"
  #   exposed-headers: "Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params"
  #   allow-credentials: true
  #   max-age: 1800
  mail:
    from: gateway@localhost
  api-docs:
    default-include-pattern: ${server.servlet.context-path:}/api/**
    management-include-pattern: ${server.servlet.context-path:}/management/**
    title: Gateway API
    description: Gateway API documentation
    version: 0.0.1
    terms-of-service-url:
    contact-name:
    contact-url:
    contact-email:
    license: unlicensed
    license-url:
  security:
    content-security-policy: "default-src 'self'; frame-src 'self' data:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://storage.googleapis.com; style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; img-src 'self' data:; font-src 'self' https://fonts.gstatic.com data:"
    oauth2:
      audience:
        - account
        - api://default
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
