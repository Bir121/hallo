# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

logging:
  level:
    ROOT: DEBUG
    tech.jhipster: DEBUG
    org.hibernate.SQL: DEBUG
    com.sunknowledge.dme.rcm: DEBUG

eureka:
  instance:
    prefer-ip-address: true
  client:
    service-url:
      defaultZone: http://admin:${jhipster.registry.password}@localhost:8761/eureka/

spring:
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**,.h2.server.properties
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  cloud:
    config:
      uri: http://admin:${jhipster.registry.password}@localhost:8761/config
      # name of the config server's property source (file.yml) that we want to use
      name: salesorder
      profile: dev
      label: main # toggle to switch to a different version of the configuration as stored in git
      # it can be set to any label, branch or commit of the configuration source Git repository
  h2:
    console:
      # disable spring boot built-in h2-console since we start it manually with correct configuration
      enabled: true
    liquibase:
      # Remove 'faker' if you do not want the sample data to be loaded automatically
      contexts: dev, faker
#      drop-first: true
#      url: jdbc:h2:file:./target/h2db/db/salesorder;DB_CLOSE_DELAY=-1

################ Connected to Docker DB #################################
#  liquibase:
#    contexts: dev
#    url: jdbc:postgresql://localhost:5432/salesorder?currentSchema=so
#    user: salesorder
#    password:
#    change-log: liquibase/master.xml
#  r2dbc:
##    url: r2dbc:postgresql://localhost:5432/salesorder
#    url: r2dbc:postgresql://127.0.0.1:5432/salesorder
#    username: salesorder
#    password:
#    properties:
#      schema: so
################ Connected to Docker DB #################################

  liquibase:
    contexts: dev
    url: jdbc:postgresql://10.10.6.220:5432/devdmedb_staging?currentSchema=so
    user: devms_user
    password: arjp#$9134564562
    change-log: liquibase/master.xml
  r2dbc:
      #    url: r2dbc:postgresql://localhost:5432/salesorder
      url: r2dbc:postgresql://10.10.6.220:5432/devdmedb_staging
      username: devms_user
      password: arjp#$9134564562
      properties:
        schema: so
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
#  r2dbc:
#    url: r2dbc:h2:file://././target/h2db/db/salesorder;DB_CLOSE_DELAY=-1
#    username: salesorder
#    password:
  thymeleaf:
    cache: false
  sleuth:
    # https://github.com/spring-projects/spring-framework/issues/27844#issuescomment-1002866885
    # https://github.com/spring-cloud/spring-cloud-sleuth/issues/2094
    async:
      enabled: false
    enabled: false
    sampler:
      probability: 1 # report 100% of traces
  zipkin: # Use the "zipkin" Maven profile to have the Spring Cloud Zipkin dependencies
    base-url: http://localhost:9411
    enabled: false
    locator:
      discovery:
        enabled: true

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health
  endpoint:
    health:
      show-details: always

#resilience4j.circuitbreaker:
#    instances:
#      salesOrderDeliveryService:
#        registerHealthIndicator: true
#        eventConsumerBufferSize: 10
#        failureRateThreshold: 50
#        minimumNumberOfCalls: 5
#        automaticTransmissionFromOpenToHalfOpenEnabled: true
#        waitDurationInOpenState: 55
#        permittedNumberOfCallsInHalfOpenState: 3
#        slidingWindowSize: 10
#        slidingWindowType: COUNT_BASED







server:
  port: 8083

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  registry:
    password: admin
  # CORS is disabled by default on microservices, as you should access them through a gateway.
  # If you want to enable it, please uncomment the configuration below.
  # cors:
  #   allowed-origins: "http://localhost:9000,https://localhost:9000"
  #   allowed-methods: "*"
  #   allowed-headers: "*"
  #   exposed-headers: "Authorization,Link,X-Total-Count"
  #   allow-credentials: true
  #   max-age: 1800
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:

salesorder:
  patient-creation-response-topic-name: patient-creation-response
  insurance-creation-response-topic-name: insurance-creation-response
  invoice-creation-response-topic-name: invoice-creation-response
  invoice-posting-response-topic-name: invoice-posting-response
  claims-submission-response-topic-name: claims-submission-response
